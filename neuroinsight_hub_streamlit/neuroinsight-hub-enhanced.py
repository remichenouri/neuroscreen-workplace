
import streamlit as st
import plotly.express as px
import plotly.graph_objects as go
import pandas as pd
import numpy as np
from datetime import datetime, date

# Configuration Ubisoft-inspired
st.set_page_config(
    page_title="NeuroInsight Hub - Workspace",
    page_icon="üß†",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Styles CSS inspir√©s d'Ubisoft - modernes et professionnels
st.markdown("""
<style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

    /* Variables de couleurs inspir√©es Ubisoft */
    :root {
        --primary-blue: #003f7f;
        --accent-blue: #0066cc;
        --dark-blue: #001f3f;
        --light-blue: #e6f2ff;
        --gradient-bg: linear-gradient(135deg, #003f7f 0%, #0066cc 100%);
        --card-shadow: 0 8px 32px rgba(0, 63, 127, 0.1);
        --border-radius: 12px;
    }

    /* Styles g√©n√©raux */
    .main {
        padding: 2rem 3rem;
        background: linear-gradient(135deg, #f8fbff 0%, #ffffff 100%);
        font-family: 'Inter', sans-serif;
    }

    /* Header principal */
    .main-header {
        background: var(--gradient-bg);
        padding: 2rem 3rem;
        border-radius: var(--border-radius);
        color: white;
        margin-bottom: 2rem;
        box-shadow: var(--card-shadow);
        position: relative;
        overflow: hidden;
    }

    .main-header::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 200px;
        height: 100%;
        background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, transparent 100%);
        transform: skewX(-15deg);
    }

    .main-header h1 {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .main-header .subtitle {
        font-size: 1.2rem;
        opacity: 0.9;
        margin-top: 0.5rem;
        font-weight: 400;
    }

    /* Cards modernes */
    .metric-card {
        background: white;
        padding: 1.8rem;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        border-left: 4px solid var(--accent-blue);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        height: 100%;
    }

    .metric-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 12px 40px rgba(0, 63, 127, 0.15);
    }

    .metric-value {
        font-size: 2.2rem;
        font-weight: 700;
        color: var(--primary-blue);
        margin: 0;
    }

    .metric-label {
        font-size: 0.95rem;
        color: #666;
        margin-top: 0.5rem;
        font-weight: 500;
    }

    .metric-change {
        font-size: 0.85rem;
        margin-top: 0.3rem;
        padding: 0.2rem 0.6rem;
        border-radius: 20px;
        font-weight: 600;
    }

    .positive-change {
        color: #22c55e;
        background: #f0fdf4;
    }

    /* Navigation sidebar */
    .sidebar .sidebar-content {
        background: var(--gradient-bg);
        padding: 2rem 1rem;
    }

    /* Boutons d'action */
    .action-button {
        background: var(--gradient-bg);
        color: white;
        padding: 0.8rem 1.5rem;
        border-radius: var(--border-radius);
        border: none;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0, 63, 127, 0.3);
    }

    .action-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(0, 63, 127, 0.4);
    }

    /* Accommodation cards */
    .accommodation-card {
        background: white;
        padding: 1.5rem;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        margin-bottom: 1rem;
        border-left: 4px solid var(--accent-blue);
        transition: all 0.3s ease;
    }

    .accommodation-card:hover {
        transform: translateX(4px);
        box-shadow: 0 8px 24px rgba(0, 63, 127, 0.12);
    }

    .accommodation-title {
        font-weight: 600;
        color: var(--primary-blue);
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
    }

    .impact-score {
        display: inline-block;
        padding: 0.3rem 0.8rem;
        background: var(--light-blue);
        color: var(--primary-blue);
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
        margin-top: 0.5rem;
    }

    /* Profile cards pour les r√©sultats de tests */
    .profile-card {
        background: linear-gradient(135deg, #f8fbff 0%, #ffffff 100%);
        padding: 2rem;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        border: 2px solid var(--accent-blue);
        margin: 1.5rem 0;
    }

    .profile-title {
        color: var(--primary-blue);
        font-size: 1.4rem;
        font-weight: 700;
        margin-bottom: 1rem;
        text-align: center;
    }

    .profile-section {
        margin-bottom: 1.5rem;
    }

    .profile-section h4 {
        color: var(--primary-blue);
        font-weight: 600;
        margin-bottom: 0.8rem;
        border-bottom: 2px solid var(--light-blue);
        padding-bottom: 0.3rem;
    }

    /* Footer moderne */
    .footer {
        margin-top: 3rem;
        padding: 2rem;
        text-align: center;
        color: #666;
        border-top: 1px solid #e5e5e5;
        font-size: 0.9rem;
    }

    /* Animations et transitions */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-in {
        animation: fadeInUp 0.6s ease-out;
    }

    /* Responsive */
    @media (max-width: 768px) {
        .main {
            padding: 1rem;
        }

        .main-header {
            padding: 1.5rem;
        }

        .main-header h1 {
            font-size: 2rem;
        }
    }
</style>
""", unsafe_allow_html=True)

# Navigation sidebar
st.sidebar.markdown("""
<div style="text-align: center; padding: 1rem 0; background: linear-gradient(135deg, #003f7f 0%, #0066cc 100%); margin: -1rem -1rem 2rem -1rem; border-radius: 0 0 12px 12px;">
    <h2 style="color: white; margin: 0; font-weight: 700;">üéØ Navigation</h2>
</div>
""", unsafe_allow_html=True)

# Menu de navigation
page = st.sidebar.selectbox(
    "",
    ["üè† Dashboard Principal", "üß† Module TDAH", "üéØ Module Autisme", 
     "üìä Observatoire Donn√©es", "üî¨ NeuroScreen √âvaluations", 
     "üè¢ Gestion Workplace", "üë• Recrutement Neurodiversit√©", 
     "üìà Analytics & Reporting"]
)

# M√©triques rapides en sidebar
st.sidebar.markdown("### üìä M√©triques Rapides")
col1, col2, col3 = st.sidebar.columns(3)
with col1:
    st.metric("Employ√©s Neurodivers", "187")
with col2:
    st.metric("Taux de R√©tention", "92.3%")
with col3:
    st.metric("Score Satisfaction", "4.2/5")

# Header principal
st.markdown("""
<div class="main-header animate-fade-in">
    <h1>üß† NeuroInsight Hub - Workspace</h1>
    <div class="subtitle">Plateforme compl√®te de gestion de la neurodiversit√©</div>
</div>
""", unsafe_allow_html=True)

# DASHBOARD PRINCIPAL
if page == "üè† Dashboard Principal":
    st.markdown('<div class="animate-fade-in">', unsafe_allow_html=True)

    # M√©triques principales
    col1, col2, col3, col4 = st.columns(4)

    with col1:
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">1,247</div>
            <div class="metric-label">üë• Total Employ√©s</div>
            <div class="metric-change positive-change">‚Üó +3.2%</div>
        </div>
        """, unsafe_allow_html=True)

    with col2:
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">187 <span style="font-size: 1rem;">(15.0%)</span></div>
            <div class="metric-label">üß† Employ√©s Neurodivers</div>
            <div class="metric-change positive-change">‚Üó +2.1%</div>
        </div>
        """, unsafe_allow_html=True)

    with col3:
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">18.5%</div>
            <div class="metric-label">üìà Augmentation Productivit√©</div>
            <div class="metric-change positive-change">‚Üó +5.3%</div>
        </div>
        """, unsafe_allow_html=True)

    with col4:
        st.markdown("""
        <div class="metric-card">
            <div class="metric-value">4.2/5</div>
            <div class="metric-label">‚≠ê Score Bien-√™tre</div>
            <div class="metric-change positive-change">‚Üó +0.3</div>
        </div>
        """, unsafe_allow_html=True)

    st.markdown("</div>", unsafe_allow_html=True)

    # Graphiques
    col1, col2 = st.columns(2)

    with col1:
        # R√©partition des conditions
        conditions = ["TDAH", "Autisme", "Dyslexie", "Autres"]
        values = [47.6, 27.8, 24.6, 0]

        fig_pie = px.pie(
            values=values, 
            names=conditions,
            title="R√©partition des Conditions Neurodivergentes",
            color_discrete_sequence=['#003f7f', '#0066cc', '#4d94ff', '#b3d9ff']
        )
        fig_pie.update_layout(
            title_font_size=16,
            title_font_color='#003f7f',
            font_family="Inter"
        )
        st.plotly_chart(fig_pie, use_container_width=True)

    with col2:
        # Performance par d√©partement
        departments = ["IT", "Design", "Finance", "Marketing", "Support"]
        productivity = [85, 78, 82, 75, 80]
        engagement = [88, 85, 79, 77, 83]
        wellbeing = [86, 82, 80, 76, 81]

        fig_bar = go.Figure()
        fig_bar.add_trace(go.Bar(name='Productivit√©', x=departments, y=productivity, marker_color='#003f7f'))
        fig_bar.add_trace(go.Bar(name='Engagement', x=departments, y=engagement, marker_color='#0066cc'))
        fig_bar.add_trace(go.Bar(name='Bien-√™tre', x=departments, y=wellbeing, marker_color='#4d94ff'))

        fig_bar.update_layout(
            title='Performance par D√©partement',
            xaxis_title='D√©partement',
            yaxis_title='Score',
            barmode='group',
            title_font_size=16,
            title_font_color='#003f7f',
            font_family="Inter"
        )
        st.plotly_chart(fig_bar, use_container_width=True)

    # Activit√©s r√©centes
    st.markdown("### üìã Activit√©s R√©centes")
    activities = [
        ("Il y a 2h", "üîç Nouveau screening TDAH compl√©t√©"),
        ("Il y a 4h", "üîß Accommodations mises en place pour 3 employ√©s"),
        ("Il y a 6h", "üìä Rapport mensuel g√©n√©r√©"),
        ("Il y a 1j", "üéì Formation managers neurodiversit√©"),
        ("Il y a 2j", "üë§ 5 nouveaux candidats √©valu√©s")
    ]

    for time, activity in activities:
        st.markdown(f"**{time}** - {activity}")

# MODULE TDAH
elif page == "üß† Module TDAH":
    st.markdown("## üß† Module TDAH - Trouble du D√©ficit de l'Attention/Hyperactivit√©")

    # Informations g√©n√©rales
    st.markdown("**Pr√©valence**: 5% population mondiale ‚Ä¢ 3% adultes France ‚Ä¢ Ratio M/F: 2.3:1")

    tab1, tab2, tab3, tab4 = st.tabs(["üîç Screening", "üìä Statistiques", "üéØ Accommodations", "üìà Suivi"])

    with tab1:
        st.markdown("### üîç Screening TDAH")

        with st.expander("üî¥ D√©marrer le Screening TDAH", expanded=False):
            st.markdown("**R√©pondez aux questions suivantes (0=Jamais, 4=Tr√®s souvent):**")

            questions = [
                "Difficult√© √† terminer les d√©tails d'un projet",
                "Difficult√© √† organiser les t√¢ches et activit√©s", 
                "√âviter les t√¢ches n√©cessitant un effort mental soutenu",
                "Perdre des objets n√©cessaires aux t√¢ches",
                "√ätre facilement distrait par des stimuli externes",
                "Oublier les activit√©s quotidiennes",
                "Remuer les mains/pieds quand assis",
                "Se lever dans des situations o√π il faut rester assis",
                "Se sentir agit√©",
                "Difficult√© √† se d√©tendre lors d'activit√©s de loisir",
                "Parler excessivement",
                "R√©pondre avant que les questions soient termin√©es"
            ]

            scores = []
            for i, question in enumerate(questions):
                score = st.slider(f"{i+1}. {question}", 0, 4, 0, key=f"q_{i}")
                scores.append(score)

            if st.button("Calculer le score TDAH", key="calc_adhd"):
                total_score = sum(scores)
                inattention_score = sum(scores[:6])
                hyperactivity_score = sum(scores[6:])

                st.markdown("### üìä R√©sultats du Screening TDAH")

                # Profil d√©taill√©
                st.markdown(f"""
                <div class="profile-card">
                    <div class="profile-title">üìã Votre Profil TDAH D√©taill√©</div>

                    <div class="profile-section">
                        <h4>üéØ Scores Obtenus</h4>
                        <p><strong>Score Total:</strong> {total_score}/48</p>
                        <p><strong>Inattention:</strong> {inattention_score}/24</p>
                        <p><strong>Hyperactivit√©/Impulsivit√©:</strong> {hyperactivity_score}/24</p>
                    </div>

                    <div class="profile-section">
                        <h4>üìà Interpr√©tation</h4>
                        {"<p><strong style='color: #dc2626;'>Risque √âlev√©:</strong> Vos scores sugg√®rent des sympt√¥mes significatifs de TDAH. Une √©valuation professionnelle est recommand√©e.</p>" if total_score >= 24 else 
                         "<p><strong style='color: #ea580c;'>Risque Mod√©r√©:</strong> Certains sympt√¥mes sont pr√©sents. Un suivi peut √™tre b√©n√©fique.</p>" if total_score >= 12 else
                         "<p><strong style='color: #16a34a;'>Risque Faible:</strong> Peu de sympt√¥mes d√©tect√©s. Continuez √† surveiller votre bien-√™tre au travail.</p>"}
                    </div>

                    <div class="profile-section">
                        <h4>üí° Recommandations Personnalis√©es</h4>
                        {"<ul><li>Consultez un professionnel de sant√© sp√©cialis√© en TDAH</li><li>Mettez en place des accommodations workplace imm√©diates</li><li>Utilisez des outils de gestion du temps et d'organisation</li><li>Demandez un environnement de travail calme</li></ul>" if total_score >= 24 else
                         "<ul><li>Explorez des strat√©gies d'organisation</li><li>Utilisez des techniques de gestion du temps</li><li>Demandez des pauses r√©guli√®res</li><li>Consid√©rez un coaching en productivit√©</li></ul>" if total_score >= 12 else
                         "<ul><li>Maintenez vos bonnes pratiques actuelles</li><li>Restez attentif √† votre bien-√™tre</li><li>Explorez des outils de productivit√©</li><li>Participez aux formations neurodiversit√©</li></ul>"}
                    </div>

                    <div class="profile-section">
                        <h4>üéØ Prochaines √âtapes</h4>
                        {"<ol><li>Prenez rendez-vous avec votre m√©decin traitant</li><li>Contactez les RH pour discuter d'accommodations</li><li>Explorez le catalogue d'accommodations de cette plateforme</li><li>Rejoignez notre groupe de support TDAH</li></ol>" if total_score >= 24 else
                         "<ol><li>Discutez avec votre manager de vos besoins</li><li>Explorez les outils d'organisation disponibles</li><li>Participez aux ateliers sur la gestion du temps</li><li>Effectuez un nouveau screening dans 3 mois</li></ol>"}
                    </div>
                </div>
                """, unsafe_allow_html=True)

    with tab2:
        st.markdown("### üìä Statistiques TDAH")

        col1, col2, col3, col4 = st.columns(4)
        with col1:
            st.metric("Pr√©valence Mondiale", "5.0%")
        with col2:
            st.metric("Adultes France", "3.0%")
        with col3:
            st.metric("Persistance Adulte", "66.0%")
        with col4:
            st.metric("Comorbidit√©s", "50.0%")

        # Graphique des d√©fis
        challenges = ["Difficult√©s d'attention", "Gestion du temps", "Organisation", "Impulsivit√©"]
        percentages = [75, 68, 72, 55]

        fig = px.bar(x=challenges, y=percentages, title="D√©fis Principaux en Milieu Professionnel (%)")
        fig.update_layout(title_font_color='#003f7f', font_family="Inter")
        st.plotly_chart(fig, use_container_width=True)

    with tab3:
        st.markdown("### üéØ Accommodations Recommand√©es")

        # Catalogue √©tendu d'accommodations TDAH
        accommodations_tdah = {
            "Environnement de Travail": [
                {"nom": "üîá Environnement calme et sans distraction", "impact": 8.5, "co√ªt": "Faible", "description": "Espace de travail isol√© des bruits et distractions visuelles"},
                {"nom": "üéß Casque antibruit ou musique de concentration", "impact": 7.8, "co√ªt": "Faible", "description": "Permet de bloquer les distractions auditives"},
                {"nom": "üí° √âclairage personnalis√© et contr√¥le luminosit√©", "impact": 7.2, "co√ªt": "Moyen", "description": "R√©duction de la fatigue oculaire et am√©lioration de la concentration"},
                {"nom": "ü™ë Mobilier ergonomique et espaces flexibles", "impact": 7.0, "co√ªt": "Moyen", "description": "Bureau debout, ballon de yoga, espaces vari√©s pour s'adapter aux besoins"}
            ],
            "Gestion du Temps": [
                {"nom": "‚è∞ Pauses r√©guli√®res et fr√©quentes", "impact": 8.2, "co√ªt": "Aucun", "description": "Pauses de 5-10 min toutes les heures pour maintenir l'attention"},
                {"nom": "üìÖ Horaires flexibles et pic de performance", "impact": 8.7, "co√ªt": "Faible", "description": "Adapter les horaires aux moments de meilleure concentration"},
                {"nom": "‚è±Ô∏è Techniques Pomodoro et gestion par blocs", "impact": 8.0, "co√ªt": "Aucun", "description": "Structuration du travail en p√©riodes courtes et focalis√©es"},
                {"nom": "üîî Rappels et alarmes personnalis√©s", "impact": 7.5, "co√ªt": "Aucun", "description": "Notifications pour les t√¢ches, r√©unions et deadlines"}
            ],
            "Outils Num√©riques": [
                {"nom": "üì± Applications de gestion des t√¢ches", "impact": 9.1, "co√ªt": "Faible", "description": "Todoist, Notion, Asana pour organiser et prioriser"},
                {"nom": "üß† Mind mapping et visualisation", "impact": 8.3, "co√ªt": "Faible", "description": "MindMeister, XMind pour structurer les id√©es"},
                {"nom": "üìù Outils de prise de notes collaboratives", "impact": 7.9, "co√ªt": "Faible", "description": "OneNote, Obsidian pour capturer et organiser l'information"},
                {"nom": "ü§ñ Assistants IA et automatisation", "impact": 8.6, "co√ªt": "Moyen", "description": "Calendly, Zapier pour automatiser les t√¢ches r√©p√©titives"}
            ],
            "Support et Formation": [
                {"nom": "üë®‚Äçüè´ Coaching TDAH sp√©cialis√©", "impact": 9.2, "co√ªt": "√âlev√©", "description": "Accompagnement personnalis√© par un professionnel form√©"},
                {"nom": "üë• Groupes de support et mentorat", "impact": 8.1, "co√ªt": "Faible", "description": "Partage d'exp√©riences avec d'autres employ√©s neurodivers"},
                {"nom": "üìö Formation managers sur le TDAH", "impact": 8.8, "co√ªt": "Moyen", "description": "Sensibilisation et outils pour mieux accompagner"},
                {"nom": "üéØ Plans de d√©veloppement personnalis√©s", "impact": 8.4, "co√ªt": "Moyen", "description": "Objectifs adapt√©s et progression sur mesure"}
            ]
        }

        for category, items in accommodations_tdah.items():
            st.markdown(f"#### {category}")
            for item in items:
                with st.expander(f"üîß {item['nom']}"):
                    col1, col2 = st.columns([3, 1])
                    with col1:
                        st.markdown(f"**Description**: {item['description']}")
                        st.progress(item['impact']/10)
                        st.markdown(f"**Impact Score**: {item['impact']}/10")
                    with col2:
                        st.markdown(f"**Co√ªt**: {item['co√ªt']}")
                        cost_color = {"Aucun": "#22c55e", "Faible": "#eab308", "Moyen": "#ea580c", "√âlev√©": "#dc2626"}
                        st.markdown(f"<span style='color: {cost_color.get(item['co√ªt'], '#666')};'>‚óè Niveau de co√ªt</span>", unsafe_allow_html=True)

    with tab4:
        st.markdown("### üìà Suivi et √âvolution")

        # Graphique d'√©volution
        dates = pd.date_range('2024-03-01', '2024-11-01', freq='M')
        attention_scores = [65, 68, 72, 75, 78, 82, 85, 87, 90]
        organization_scores = [60, 63, 67, 71, 75, 79, 83, 86, 88]
        productivity_scores = [70, 73, 76, 80, 83, 87, 90, 92, 94]

        fig = go.Figure()
        fig.add_trace(go.Scatter(x=dates, y=attention_scores, mode='lines+markers', name='Attention', line=dict(color='#003f7f')))
        fig.add_trace(go.Scatter(x=dates, y=organization_scores, mode='lines+markers', name='Organisation', line=dict(color='#0066cc')))
        fig.add_trace(go.Scatter(x=dates, y=productivity_scores, mode='lines+markers', name='Productivit√©', line=dict(color='#4d94ff')))

        fig.update_layout(
            title='√âvolution des M√©triques TDAH (Moyenne des employ√©s)',
            xaxis_title='Date',
            yaxis_title='Score',
            title_font_color='#003f7f',
            font_family="Inter"
        )
        st.plotly_chart(fig, use_container_width=True)

# MODULE AUTISME
elif page == "üéØ Module Autisme":
    st.markdown("## üéØ Module Autisme - Troubles du Spectre Autistique")

    st.markdown("**Emploi**: 22% taux d'emploi ‚Ä¢ 85% ch√¥mage ‚Ä¢ 7M personnes en Europe")

    tab1, tab2, tab3, tab4 = st.tabs(["üîç √âvaluation", "üí™ Forces", "üõ†Ô∏è Accommodations", "üìä Analytics"])

    with tab1:
        st.markdown("### üîç √âvaluation Autisme")

        with st.expander("üü¢ D√©marrer l'√âvaluation Autisme", expanded=False):
            st.markdown("**Questionnaire d'auto-√©valuation des traits autistiques au travail:**")

            questions_autisme = [
                "Je pr√©f√®re les routines pr√©visibles au travail",
                "Les changements soudains de planning me perturbent",
                "Je remarque des d√©tails que d'autres ne voient pas",
                "Les environnements bruyants me fatiguent rapidement",
                "Je pr√©f√®re les instructions √©crites aux explications verbales",
                "Les interactions sociales informelles me demandent beaucoup d'√©nergie",
                "J'ai des int√©r√™ts tr√®s sp√©cialis√©s dans mon domaine",
                "Je suis tr√®s pr√©cis dans mon travail",
                "Les r√©unions improvis√©es me stressent",
                "Je communique mieux par √©crit qu'√† l'oral"
            ]

            scores_autisme = []
            for i, question in enumerate(questions_autisme):
                score = st.slider(f"{i+1}. {question}", 1, 5, 3, key=f"autism_q_{i}", 
                                help="1=Pas du tout d'accord, 5=Tout √† fait d'accord")
                scores_autisme.append(score)

            if st.button("Analyser le profil autistique", key="calc_autism"):
                total_score = sum(scores_autisme)

                st.markdown("### üìä R√©sultats de l'√âvaluation Autisme")

                # Profil d√©taill√© pour l'autisme
                st.markdown(f"""
                <div class="profile-card">
                    <div class="profile-title">üéØ Votre Profil Autistique D√©taill√©</div>

                    <div class="profile-section">
                        <h4>üìä Score Global</h4>
                        <p><strong>Score Total:</strong> {total_score}/50</p>
                        <p><strong>Pourcentage:</strong> {(total_score/50)*100:.1f}%</p>
                    </div>

                    <div class="profile-section">
                        <h4>üé≠ Profil et Besoins</h4>
                        {"<p><strong style='color: #dc2626;'>Profil Fortement Autistique:</strong> Vous pr√©sentez de nombreux traits autistiques. Des accommodations significatives pourraient grandement am√©liorer votre bien-√™tre au travail.</p>" if total_score >= 40 else 
                         "<p><strong style='color: #ea580c;'>Profil Mod√©r√©ment Autistique:</strong> Vous pr√©sentez plusieurs traits autistiques. Certaines accommodations seraient b√©n√©fiques.</p>" if total_score >= 30 else
                         "<p><strong style='color: #16a34a;'>Profil L√©g√®rement Autistique:</strong> Vous pr√©sentez quelques traits autistiques. Des ajustements mineurs peuvent suffire.</p>"}
                    </div>

                    <div class="profile-section">
                        <h4>üíé Vos Forces Identifi√©es</h4>
                        <ul>
                            <li><strong>Attention aux d√©tails:</strong> Capacit√© √† d√©tecter des erreurs et inconsistances</li>
                            <li><strong>Pens√©e syst√©mique:</strong> Compr√©hension approfondie des processus complexes</li>
                            <li><strong>Expertise sp√©cialis√©e:</strong> Connaissances approfondies dans vos domaines d'int√©r√™t</li>
                            <li><strong>Fiabilit√©:</strong> Consistance et pr√©cision dans l'ex√©cution des t√¢ches</li>
                            <li><strong>Objectivit√©:</strong> Prise de d√©cision bas√©e sur les faits plut√¥t que les √©motions</li>
                        </ul>
                    </div>

                    <div class="profile-section">
                        <h4>üõ†Ô∏è Accommodations Recommand√©es</h4>
                        {"<ul><li>Espace de travail calme et pr√©visible</li><li>Instructions √©crites d√©taill√©es</li><li>Horaires fixes et pr√©visibles</li><li>R√©duction des stimuli sensoriels</li><li>Communication directe et claire</li><li>Temps de pr√©paration pour les changements</li></ul>" if total_score >= 40 else
                         "<ul><li>Environnement de travail structur√©</li><li>Pr√©avis pour les changements</li><li>Instructions claires et pr√©cises</li><li>Espace personnel respect√©</li><li>Meetings organis√©s et cadr√©s</li></ul>" if total_score >= 30 else
                         "<ul><li>Routines de travail claires</li><li>Communication transparente</li><li>Objectifs explicites</li><li>Feedback r√©gulier et constructif</li></ul>"}
                    </div>

                    <div class="profile-section">
                        <h4>üìà Plan de D√©veloppement</h4>
                        <ol>
                            <li><strong>Immediate:</strong> Discutez de vos besoins avec votre manager</li>
                            <li><strong>Court terme:</strong> Mettez en place les accommodations prioritaires</li>
                            <li><strong>Moyen terme:</strong> Explorez les opportunit√©s utilisant vos forces</li>
                            <li><strong>Long terme:</strong> D√©veloppez un plan de carri√®re adapt√©</li>
                        </ol>
                    </div>

                    <div class="profile-section">
                        <h4>ü§ù Ressources et Support</h4>
                        <ul>
                            <li>Consultation avec notre sp√©cialiste neurodiversit√©</li>
                            <li>Acc√®s au groupe de support autisme</li>
                            <li>Formation manager sur l'accompagnement autisme</li>
                            <li>Ressources en ligne sur l'autisme au travail</li>
                        </ul>
                    </div>
                </div>
                """, unsafe_allow_html=True)

    with tab2:
        st.markdown("### üí™ Forces et Talents Autistiques")

        col1, col2 = st.columns(2)

        with col1:
            forces = ["Attention aux D√©tails", "Reconnaissance Motifs", "Raisonnement Logique", "Fiabilit√©"]
            percentages = [94.2, 89.7, 91.3, 88.9]

            fig = px.bar(x=forces, y=percentages, title="Pourcentage d'Employ√©s Autistes Excellant dans Chaque Domaine")
            fig.update_layout(title_font_color='#003f7f', font_family="Inter")
            st.plotly_chart(fig, use_container_width=True)

        with col2:
            st.markdown("""
            #### üéØ Opportunit√©s de Carri√®re

            **R√¥les Id√©aux:**
            - üîç **Analyse de donn√©es** - D√©tection de patterns complexes
            - üß™ **Contr√¥le qualit√©** - Pr√©cision et attention aux d√©tails  
            - üíª **D√©veloppement** - Logique et r√©solution de probl√®mes
            - üìä **Recherche** - Analyse approfondie et m√©thodique
            - üîê **Audit** - V√©rification syst√©matique et rigoureuse
            - üé® **Design UX** - Attention aux d√©tails d'interaction
            - üìö **Documentation** - Organisation et clart√©
            - üî¨ **Testing** - Identification d'anomalies
            """)

    with tab3:
        st.markdown("### üõ†Ô∏è Accommodations Workplace")

        # Catalogue √©tendu d'accommodations Autisme
        accommodations_autisme = {
            "Communication et Instructions": [
                {"nom": "üìù Instructions √©crites d√©taill√©es", "impact": 9.2, "co√ªt": "Faible", "description": "Documentation compl√®te des processus et proc√©dures"},
                {"nom": "üó£Ô∏è Communication directe et litt√©rale", "impact": 8.7, "co√ªt": "Aucun", "description": "√âviter les m√©taphores, √™tre pr√©cis et explicite"},
                {"nom": "üìß Pr√©f√©rence communication √©crite", "impact": 8.3, "co√ªt": "Aucun", "description": "Email, chat plut√¥t que t√©l√©phone ou face-√†-face"},
                {"nom": "‚è∞ Pr√©avis pour les changements", "impact": 9.0, "co√ªt": "Aucun", "description": "Information √† l'avance des modifications de routine"}
            ],
            "Environnement Sensoriel": [
                {"nom": "üîá R√©duction stimuli sensoriels", "impact": 8.9, "co√ªt": "Moyen", "description": "Contr√¥le bruit, √©clairage, temp√©rature"},
                {"nom": "üéß Casque antibruit personnalis√©", "impact": 8.5, "co√ªt": "Faible", "description": "R√©duction des distractions auditives"},
                {"nom": "üí° √âclairage adapt√© (√©viter fluorescent)", "impact": 7.8, "co√ªt": "Moyen", "description": "LED doux ou √©clairage naturel"},
                {"nom": "üè† Option t√©l√©travail r√©gulier", "impact": 9.3, "co√ªt": "Faible", "description": "Environnement contr√¥l√© et familier"}
            ],
            "Organisation et Routine": [
                {"nom": "üìÖ Horaires fixes et pr√©visibles", "impact": 8.7, "co√ªt": "Faible", "description": "Routine stable, √©viter les changements fr√©quents"},
                {"nom": "üóÇÔ∏è Organisation workspace personnalis√©e", "impact": 8.1, "co√ªt": "Faible", "description": "Arrangement personnel de l'espace de travail"},
                {"nom": "üìã Checklists et processus structur√©s", "impact": 8.8, "co√ªt": "Aucun", "description": "√âtapes claires pour chaque t√¢che"},
                {"nom": "üéØ Objectifs SMART d√©taill√©s", "impact": 8.4, "co√ªt": "Aucun", "description": "Sp√©cifiques, mesurables, atteignables, r√©alistes, temporels"}
            ],
            "Social et Meetings": [
                {"nom": "üìä Agenda meetings d√©taill√© √† l'avance", "impact": 8.6, "co√ªt": "Aucun", "description": "Ordre du jour pr√©cis et pr√©paration possible"},
                {"nom": "üë§ R√©unions en petit comit√©", "impact": 8.2, "co√ªt": "Aucun", "description": "√âviter les grandes assembl√©es"},
                {"nom": "üö´ Exemption √©v√©nements sociaux obligatoires", "impact": 7.9, "co√ªt": "Aucun", "description": "Participation volontaire aux activit√©s sociales"},
                {"nom": "ü§ù Buddy system/mentor d√©di√©", "impact": 8.7, "co√ªt": "Faible", "description": "Personne r√©f√©rente pour questions et support"}
            ]
        }

        for category, items in accommodations_autisme.items():
            st.markdown(f"#### {category}")
            for item in items:
                col1, col2 = st.columns([4, 1])
                with col1:
                    st.markdown(f"**{item['nom']}**")
                    st.markdown(f"{item['description']}")
                    st.progress(item['impact']/10)
                with col2:
                    st.markdown(f"Impact: {item['impact']}/10")
                    st.markdown(f"Co√ªt: {item['co√ªt']}")
                st.markdown("---")

    with tab4:
        st.markdown("### üìä Analytics Autisme")

        # Comparaison performance par d√©partement
        departments = ["IT", "Design", "Finance", "Support"]
        autistic_performance = [95, 87, 91, 83]
        neurotypical_performance = [82, 84, 86, 88]

        fig = go.Figure()
        fig.add_trace(go.Bar(name='Employ√©s Autistes', x=departments, y=autistic_performance, marker_color='#003f7f'))
        fig.add_trace(go.Bar(name='Employ√©s Neurotypiques', x=departments, y=neurotypical_performance, marker_color='#4d94ff'))

        fig.update_layout(
            title='Comparaison Performance par D√©partement (%)',
            xaxis_title='D√©partement',
            yaxis_title='Score Performance',
            barmode='group',
            title_font_color='#003f7f',
            font_family="Inter"
        )
        st.plotly_chart(fig, use_container_width=True)

# GESTION WORKPLACE
elif page == "üè¢ Gestion Workplace":
    st.markdown("## üè¢ Gestion Workplace - Accommodations & Support")

    tab1, tab2, tab3 = st.tabs(["üîß Catalogue Accommodations", "üìù Demandes", "üìä Statistiques"])

    with tab1:
        st.markdown("### üîß Catalogue d'Accommodations")

        filter_condition = st.selectbox("Filtrer par condition", ["Toutes", "TDAH", "Autisme", "Dyslexie", "Dyspraxie", "Troubles Ex√©cutifs"])

        # Catalogue massif d'accommodations
        all_accommodations = {
            "TDAH": [
                {"nom": "üîá Environnement calme sans distraction", "impact": 8.5, "co√ªt": "Faible"},
                {"nom": "‚è∞ Pauses r√©guli√®res (toutes les heures)", "impact": 7.8, "co√ªt": "Aucun"},
                {"nom": "üì± Outils num√©riques d'organisation", "impact": 9.1, "co√ªt": "Moyen"},
                {"nom": "üéß Casque antibruit et musique focus", "impact": 8.2, "co√ªt": "Faible"},
                {"nom": "üìÖ Horaires flexibles selon pic d'√©nergie", "impact": 8.7, "co√ªt": "Faible"},
                {"nom": "‚è±Ô∏è Techniques Pomodoro structur√©es", "impact": 8.0, "co√ªt": "Aucun"},
                {"nom": "üß† Coaching TDAH sp√©cialis√©", "impact": 9.2, "co√ªt": "√âlev√©"},
                {"nom": "üìù Prise de notes collaborative", "impact": 7.5, "co√ªt": "Faible"}
            ],
            "Autisme": [
                {"nom": "üìù Instructions √©crites d√©taill√©es", "impact": 9.2, "co√ªt": "Faible"},
                {"nom": "üìÖ Horaires fixes et pr√©visibles", "impact": 8.7, "co√ªt": "Faible"},
                {"nom": "üîá R√©duction stimuli sensoriels", "impact": 8.9, "co√ªt": "Moyen"},
                {"nom": "üó£Ô∏è Communication directe et claire", "impact": 8.5, "co√ªt": "Aucun"},
                {"nom": "üìß Pr√©f√©rence communication √©crite", "impact": 8.3, "co√ªt": "Aucun"},
                {"nom": "üè† T√©l√©travail r√©gulier", "impact": 9.3, "co√ªt": "Faible"},
                {"nom": "üìä Agenda meetings d√©taill√©", "impact": 8.6, "co√ªt": "Aucun"},
                {"nom": "ü§ù Buddy system d√©di√©", "impact": 8.7, "co√ªt": "Faible"}
            ],
            "Dyslexie": [
                {"nom": "üé§ Outils de reconnaissance vocale", "impact": 9.0, "co√ªt": "Moyen"},
                {"nom": "üìñ Logiciels de lecture d'√©cran", "impact": 8.8, "co√ªt": "Faible"},
                {"nom": "üé® Fond color√© et polices adapt√©es", "impact": 7.9, "co√ªt": "Aucun"},
                {"nom": "‚è∞ Temps suppl√©mentaire pour lecture/√©criture", "impact": 8.4, "co√ªt": "Aucun"},
                {"nom": "üì± Apps d'aide √† l'orthographe avanc√©es", "impact": 8.1, "co√ªt": "Faible"},
                {"nom": "üó£Ô∏è Instructions verbales prioritaires", "impact": 7.8, "co√ªt": "Aucun"},
                {"nom": "üìπ Enregistrement meetings autoris√©", "impact": 8.3, "co√ªt": "Aucun"},
                {"nom": "üß† Mind mapping pour organisation", "impact": 8.6, "co√ªt": "Faible"}
            ],
            "Dyspraxie": [
                {"nom": "‚å®Ô∏è Clavier ergonomique adapt√©", "impact": 8.2, "co√ªt": "Moyen"},
                {"nom": "üñ±Ô∏è Souris alternative (trackball/verticale)", "impact": 7.8, "co√ªt": "Moyen"},
                {"nom": "üìù R√©duction t√¢ches manuscrites", "impact": 8.5, "co√ªt": "Aucun"},
                {"nom": "‚è∞ Temps suppl√©mentaire t√¢ches manuelles", "impact": 8.0, "co√ªt": "Aucun"},
                {"nom": "üè¢ √âviter hot-desking (bureau fixe)", "impact": 7.9, "co√ªt": "Faible"},
                {"nom": "üîß Adaptation outils de travail", "impact": 8.3, "co√ªt": "Moyen"},
                {"nom": "üó∫Ô∏è Plans et signalisation claire", "impact": 7.5, "co√ªt": "Faible"},
                {"nom": "üë• Assistance pour t√¢ches complexes", "impact": 8.1, "co√ªt": "Faible"}
            ],
            "Troubles Ex√©cutifs": [
                {"nom": "üìã Checklists d√©taill√©es pour chaque t√¢che", "impact": 8.8, "co√ªt": "Aucun"},
                {"nom": "üéØ Objectifs SMART d√©compos√©s", "impact": 8.6, "co√ªt": "Aucun"},
                {"nom": "üìÖ Outils de planification avanc√©s", "impact": 9.0, "co√ªt": "Faible"},
                {"nom": "üîî Rappels automatis√©s multiples", "impact": 8.4, "co√ªt": "Faible"},
                {"nom": "üë®‚Äçüè´ Coaching en organisation", "impact": 9.1, "co√ªt": "√âlev√©"},
                {"nom": "üìä Templates et mod√®les standardis√©s", "impact": 8.2, "co√ªt": "Aucun"},
                {"nom": "‚è∞ Blocs de temps d√©di√©s par type de t√¢che", "impact": 8.7, "co√ªt": "Aucun"},
                {"nom": "ü§ñ Automatisation t√¢ches r√©p√©titives", "impact": 8.9, "co√ªt": "Moyen"}
            ]
        }

        # Accommodations universelles b√©n√©ficiant √† tous
        universal_accommodations = [
            {"nom": "üí° √âclairage naturel optimis√©", "impact": 7.8, "co√ªt": "Moyen"},
            {"nom": "üåø Plantes et espaces verts", "impact": 7.5, "co√ªt": "Faible"},
            {"nom": "ü™ë Mobilier ergonomique vari√©", "impact": 8.0, "co√ªt": "Moyen"},
            {"nom": "üîá Zones de silence d√©sign√©es", "impact": 8.3, "co√ªt": "Faible"},
            {"nom": "‚òï Espaces d√©tente accessibles", "impact": 7.7, "co√ªt": "Faible"},
            {"nom": "üö∂ Zones de mouvement/marche", "impact": 7.6, "co√ªt": "Faible"},
            {"nom": "üìû Cabines t√©l√©phoniques priv√©es", "impact": 7.9, "co√ªt": "Moyen"},
            {"nom": "üé® Espaces cr√©atifs flexibles", "impact": 8.1, "co√ªt": "Moyen"}
        ]

        accommodations_to_show = []
        if filter_condition == "Toutes":
            for condition, items in all_accommodations.items():
                accommodations_to_show.extend([(f"{condition}: {item['nom']}", item['impact'], item['co√ªt']) for item in items])
            accommodations_to_show.extend([(f"Universel: {item['nom']}", item['impact'], item['co√ªt']) for item in universal_accommodations])
        elif filter_condition in all_accommodations:
            accommodations_to_show = [(item['nom'], item['impact'], item['co√ªt']) for item in all_accommodations[filter_condition]]

        for name, impact, cost in accommodations_to_show:
            with st.expander(f"üõ†Ô∏è {name}"):
                col1, col2 = st.columns([3, 1])
                with col1:
                    st.progress(impact/10)
                    st.markdown(f"**Impact Score**: {impact}/10")
                with col2:
                    st.markdown(f"**Co√ªt**: {cost}")
                    cost_colors = {"Aucun": "#22c55e", "Faible": "#eab308", "Moyen": "#ea580c", "√âlev√©": "#dc2626"}
                    st.markdown(f"<span style='color: {cost_colors.get(cost, '#666')};'>‚óè Niveau de co√ªt</span>", unsafe_allow_html=True)

    with tab2:
        st.markdown("### üìù Nouvelles Demandes d'Accommodation")

        col1, col2, col3 = st.columns(3)
        with col1:
            condition = st.selectbox("Condition", ["TDAH", "Autisme", "Dyslexie", "Dyspraxie", "Autre"])
        with col2:
            department = st.selectbox("D√©partement", ["IT", "Design", "Finance", "Marketing", "Support", "RH"])
        with col3:
            priority = st.selectbox("Priorit√©", ["Normale", "√âlev√©e", "Urgente"])

        accommodation_request = st.text_area("Accommodation demand√©e")
        justification = st.text_area("Justification")

        if st.button("Soumettre la demande"):
            st.success("‚úÖ Demande soumise avec succ√®s ! Vous recevrez une r√©ponse sous 48h.")

    with tab3:
        st.markdown("### üìä Statistiques des Accommodations")

        col1, col2 = st.columns(2)

        with col1:
            # Accommodations par type
            types = ["Technologiques", "Environnementales", "Organisationnelles", "Support Humain"]
            counts = [45, 38, 52, 28]

            fig_pie = px.pie(values=counts, names=types, title="R√©partition des Accommodations par Type")
            fig_pie.update_layout(title_font_color='#003f7f', font_family="Inter")
            st.plotly_chart(fig_pie, use_container_width=True)

        with col2:
            # Satisfaction par accommodation
            satisfaction_data = pd.DataFrame({
                'Accommodation': ['Environnement calme', 'Horaires flexibles', 'Outils num√©riques', 'Formation managers'],
                'Satisfaction': [4.6, 4.4, 4.7, 4.2],
                'Utilisation': [89, 76, 82, 67]
            })

            fig_bar = px.bar(satisfaction_data, x='Accommodation', y='Satisfaction', 
                           title="Satisfaction par Type d'Accommodation")
            fig_bar.update_layout(title_font_color='#003f7f', font_family="Inter")
            st.plotly_chart(fig_bar, use_container_width=True)

# RECRUTEMENT NEURODIVERSIT√â
elif page == "üë• Recrutement Neurodiversit√©":
    st.markdown("## üë• Recrutement Neurodiversit√© - Processus Inclusifs")

    tab1, tab2, tab3 = st.tabs(["üìã Guide Inclusif", "‚úçÔ∏è R√©daction Offres", "üé§ Entretiens Adapt√©s"])

    with tab1:
        st.markdown("### üéØ Guide de Recrutement Inclusif")

        st.markdown("#### ‚úÖ Checklist Processus Inclusif")
        checklist_items = [
            "Description de poste claire et sp√©cifique",
            "Canaux de diffusion diversifi√©s", 
            "Processus de candidature flexible",
            "Entretiens adapt√©s (questions concr√®tes)",
            "√âvaluation bas√©e sur les comp√©tences",
            "Feedback constructif syst√©matique",
            "Accompagnement lors de l'int√©gration"
        ]

        for item in checklist_items:
            st.checkbox(item, value=True)

        with st.expander("üìù R√©daction d'Offres Inclusives"):
            col1, col2 = st.columns(2)

            with col1:
                st.markdown("**√Ä faire:**")
                st.markdown("""
                - Utiliser un langage clair et direct
                - Lister les comp√©tences essentielles uniquement  
                - Mentionner l'engagement diversit√©
                - Proposer des accommodations
                """)

            with col2:
                st.markdown("**√Ä √©viter:**")
                st.markdown("""
                - Jargon et m√©taphores
                - Listes interminables de qualifications
                - R√©f√©rences √† la "culture fit"
                - Exigences non essentielles
                """)

    with tab2:
        st.markdown("### ‚úçÔ∏è G√©n√©rateur d'Offres Inclusives")

        st.markdown("**Cr√©ez une offre d'emploi neurodiversit√©-friendly:**")

        col1, col2 = st.columns(2)

        with col1:
            job_title = st.text_input("Titre du poste")
            department = st.selectbox("D√©partement", ["IT", "Design", "Finance", "Marketing", "Support"])
            level = st.selectbox("Niveau", ["Junior", "Interm√©diaire", "Senior"])

        with col2:
            contract_type = st.selectbox("Type de contrat", ["CDI", "CDD", "Stage", "Freelance"])
            location = st.selectbox("Localisation", ["Paris", "Lyon", "Remote", "Hybride"])

        st.markdown("**Comp√©tences essentielles (maximum 5):**")
        skills = []
        for i in range(5):
            skill = st.text_input(f"Comp√©tence {i+1}", key=f"skill_{i}")
            if skill:
                skills.append(skill)

        if st.button("G√©n√©rer l'offre inclusive"):
            st.markdown("### üìÑ Offre d'Emploi G√©n√©r√©e")

            offer_text = f"""
            # {job_title} - {department}

            ## √Ä propos du poste
            Nous recherchons un(e) {job_title} {level.lower()} pour rejoindre notre √©quipe {department}. 
            Ce poste en {contract_type} est bas√© √† {location}.

            ## Comp√©tences requises
            """ + ''.join([f"- {skill}" for skill in skills]) + f"""

            ## Notre engagement neurodiversit√©
            Nous valorisons la diversit√© cognitive et nous nous engageons √† cr√©er un environnement 
            de travail inclusif pour tous. Des accommodations raisonnables peuvent √™tre mises en 
            place selon vos besoins.

            ## Processus de candidature
            - Candidatures accept√©es par CV, portfolio ou vid√©o
            - Possibilit√© de recevoir les questions d'entretien √† l'avance
            - Accommodations disponibles pendant le processus
            - Feedback constructif fourni √† tous les candidats

            ## Contact
            Pour toute question sur les accommodations ou le processus, contactez-nous √† 
            inclusion@entreprise.com
            """

            st.markdown(offer_text)

    with tab3:
        st.markdown("### üé§ Guide des Entretiens Adapt√©s")

        st.markdown("#### Pr√©paration de l'Entretien")

        col1, col2 = st.columns(2)

        with col1:
            st.markdown("""
            **Avant l'entretien:**
            - Envoyer les questions √† l'avance (optionnel)
            - Proposer diff√©rents formats (pr√©sentiel, visio, t√©l√©phone)
            - Expliquer le d√©roulement d√©taill√©
            - Offrir une visite des locaux au pr√©alable
            - Permettre d'amener un support (notes, portfolio)
            """)

        with col2:
            st.markdown("""
            **Pendant l'entretien:**
            - Utiliser des questions concr√®tes et directes
            - √âviter les questions hypoth√©tiques complexes
            - Laisser du temps de r√©flexion
            - Accepter les r√©ponses √©crites si n√©cessaire
            - Se concentrer sur les comp√©tences techniques
            """)

        st.markdown("#### üó£Ô∏è Exemples de Questions Adapt√©es")

        questions_categories = {
            "Questions Techniques": [
                "D√©crivez votre exp√©rience avec [technologie sp√©cifique]",
                "Montrez-nous un exemple de projet que vous avez r√©alis√©",
                "Comment proc√©dez-vous pour r√©soudre un bug ?",
                "Quels outils utilisez-vous pour [t√¢che sp√©cifique] ?"
            ],
            "Questions sur l'Exp√©rience": [
                "Parlez-nous d'un projet dont vous √™tes fier",
                "D√©crivez votre m√©thode de travail habituelle",
                "Quelles sont vos pr√©f√©rences en mati√®re d'environnement de travail ?",
                "Comment pr√©f√©rez-vous recevoir les instructions ?"
            ],
            "Questions sur les Besoins": [
                "Avez-vous besoin d'accommodations particuli√®res ?",
                "Quel environnement de travail vous permet d'√™tre le plus productif ?",
                "Comment pr√©f√©rez-vous communiquer avec votre √©quipe ?",
                "Y a-t-il des aspects du poste qui pourraient n√©cessiter des ajustements ?"
            ]
        }

        for category, questions in questions_categories.items():
            st.markdown(f"**{category}**")
            for question in questions:
                st.markdown(f"- {question}")

# ANALYTICS & REPORTING  
elif page == "üìà Analytics & Reporting":
    st.markdown("## üìà Analytics & Reporting - Insights Avanc√©s")

    tab1, tab2, tab3 = st.tabs(["üìä Dashboard Ex√©cutif", "üìã Rapports", "üìà Pr√©dictions"])

    with tab1:
        st.markdown("### üìä Dashboard Ex√©cutif")

        col1, col2, col3, col4 = st.columns(4)

        with col1:
            st.metric("ROI Programme", "312%", "+45%")
        with col2:
            st.metric("Co√ªt par Accommodation", "‚Ç¨1,620", "-‚Ç¨230")
        with col3:
            st.metric("Temps Impl√©mentation", "12 jours", "-3 jours")
        with col4:
            st.metric("Score Maturit√©", "8.2/10", "+1.1")

        col1, col2 = st.columns(2)

        with col1:
            # √âvolution ROI
            months = ["Jan", "F√©v", "Mar", "Avr", "Mai", "Juin"]
            roi_values = [150, 180, 220, 265, 290, 312]

            fig_roi = px.line(x=months, y=roi_values, title="√âvolution ROI Programme (%)")
            fig_roi.update_layout(title_font_color='#003f7f', font_family="Inter")
            st.plotly_chart(fig_roi, use_container_width=True)

        with col2:
            # R√©partition investissements
            categories = ["Accommodations", "Formation", "Outils Tech", "√âvaluations"]
            investments = [45.4, 23.5, 18.8, 12.3]

            fig_invest = px.pie(values=investments, names=categories, 
                              title="R√©partition des Investissements (‚Ç¨)")
            fig_invest.update_layout(title_font_color='#003f7f', font_family="Inter")
            st.plotly_chart(fig_invest, use_container_width=True)

    with tab2:
        st.markdown("### üìã G√©n√©ration de Rapports")

        col1, col2, col3 = st.columns(3)

        with col1:
            report_type = st.selectbox("Type de rapport", 
                                     ["Rapport Mensuel Complet", "Analyse ROI", "Suivi Accommodations", 
                                      "Performance Employ√©s", "Indicateurs Diversit√©"])
        with col2:
            period = st.selectbox("P√©riode", ["Dernier Mois", "Trimestre", "Ann√©e", "Personnalis√©e"])

        with col3:
            format_type = st.selectbox("Format", ["PDF", "Excel", "PowerPoint"])

        if st.button("G√©n√©rer le Rapport"):
            st.success("üìä Rapport g√©n√©r√© avec succ√®s ! T√©l√©chargement en cours...")

            # Exemple de contenu de rapport
            st.markdown("### Aper√ßu du Rapport")

            sample_data = pd.DataFrame({
                'M√©trique': ['Employ√©s Neurodivers', 'Taux Satisfaction', 'Accommodations Actives', 
                           'ROI Programme', 'Temps Moyen Impl√©mentation'],
                'Valeur Actuelle': ['187 (15%)', '4.2/5', '156', '312%', '12 jours'],
                '√âvolution': ['+2.1%', '+0.3', '+23', '+45%', '-3 jours'],
                'Statut': ['‚úÖ Cible atteinte', '‚úÖ Cible atteinte', 'üü° En progression', 
                          '‚úÖ D√©passe cible', '‚úÖ Am√©lioration']
            })

            st.dataframe(sample_data, use_container_width=True)

    with tab3:
        st.markdown("### üìà Mod√®les Pr√©dictifs")

        st.markdown("#### üîÆ Pr√©dictions Bas√©es sur l'IA")

        col1, col2 = st.columns(2)

        with col1:
            st.markdown("""
            **Pr√©visions 6 mois:**
            - üìà Croissance employ√©s neurodivers: **+18%**
            - üéØ Taux de r√©tention pr√©vu: **94.5%**
            - üí∞ ROI attendu: **385%**
            - ‚è±Ô∏è R√©duction temps d'adaptation: **-25%**
            """)

        with col2:
            st.markdown("""
            **Recommandations IA:**
            - üîß Augmenter accommodations tech (+15%)
            - üë®‚Äçüè´ Former 12 managers suppl√©mentaires  
            - üè¢ √âtendre programme √† 2 nouveaux d√©partements
            - üìä Impl√©menter suivi temps r√©el
            """)

        # Graphique pr√©dictif
        future_months = ["Jul", "Ao√ªt", "Sep", "Oct", "Nov", "D√©c"]
        current_values = [187, 189, 192, 195, 198, 201]
        predicted_values = [204, 208, 213, 218, 224, 230]

        fig_pred = go.Figure()
        fig_pred.add_trace(go.Scatter(x=future_months, y=current_values, 
                                    mode='lines+markers', name='Tendance Actuelle',
                                    line=dict(color='#003f7f')))
        fig_pred.add_trace(go.Scatter(x=future_months, y=predicted_values,
                                    mode='lines+markers', name='Pr√©diction IA',
                                    line=dict(color='#0066cc', dash='dash')))

        fig_pred.update_layout(
            title='Pr√©diction √âvolution Employ√©s Neurodivers',
            xaxis_title='Mois',
            yaxis_title="Nombre d'Employ√©s",
            title_font_color='#003f7f',
            font_family="Inter"
        )
        st.plotly_chart(fig_pred, use_container_width=True)

# OBSERVATOIRE DONN√âES et NEUROSCREEN √âVALUATIONS (gard√©s simples pour l'espace)
elif page == "üìä Observatoire Donn√©es":
    import streamlit as st
    import pandas as pd
    import plotly.express as px
    
    st.markdown("## üìä Observatoire des Donn√©es Neurodiversit√©")
    
    # 1. √âvolution de la Pr√©valence (2020‚Äì2024)
    prevalence = pd.DataFrame({
        "Ann√©e": [2020, 2021, 2022, 2023, 2024],
        "TDAH (%)": [2.8, 3.0, 3.2, 3.5, 3.7],
        "Autisme (%)": [0.8, 0.9, 1.0, 1.05, 1.1],
        "Total (%)": [3.6, 3.9, 4.2, 4.55, 4.8]
    })
    fig_prev = px.line(prevalence, x="Ann√©e", y=["TDAH (%)","Autisme (%)","Total (%)"],
                       markers=True,
                       title="√âvolution de la Pr√©valence Neurodiversit√© en France (2020‚Äì2024)",
                       labels={"value":"Pr√©valence (%)","variable":"Condition"})
    fig_prev.update_layout(legend_title_text=None, font_family="Inter")
    st.plotly_chart(fig_prev, use_container_width=True)
    
    # 2. Donn√©es R√©gionales d√©taill√©es
    st.markdown("### üó∫Ô∏è Pr√©valence par R√©gion (France)")
    regions = pd.DataFrame({
        "R√©gion": ["√éle-de-France","PACA","Nouvelle-Aquitaine","Occitanie","Auvergne-Rh√¥ne-Alpes"],
        "Population": [12000000, 5000000, 6000000, 5800000, 8000000],
        "TDAH (%)": [3.2, 3.4, 3.1, 3.3, 3.5],
        "Autisme (%)": [1.2, 0.9, 1.0, 0.8, 1.1]
    })
    regions["Est. TDAH"] = (regions["Population"] * regions["TDAH (%)"] / 100).astype(int)
    regions["Est. Autisme"] = (regions["Population"] * regions["Autisme (%)"] / 100).astype(int)
    
    # Carte choropl√®the simplifi√©e
    fig_map = px.choropleth(
        regions,
        geojson="https://raw.githubusercontent.com/gregoiredavid/france-geojson/master/regions-version-simplifiee.geojson",
        featureidkey="properties.nom",
        locations="R√©gion",
        color="Total (%)",
        hover_data=["TDAH (%)","Autisme (%)"],
        title="Cartographie de la Pr√©valence par R√©gion",
        color_continuous_scale="Blues"
    )
    fig_map.update_geos(fitbounds="locations", visible=False)
    st.plotly_chart(fig_map, use_container_width=True)
    
    # Tableau d√©taill√©
    st.markdown("#### üìã Tableau de Donn√©es R√©gionales")
    st.dataframe(regions.set_index("R√©gion"), use_container_width=True)
    
    # 3. Comparaisons Internationales
    st.markdown("### üåç Comparaisons Internationales")
    intl = pd.DataFrame({
        "Pays": ["France","Allemagne","Royaume-Uni","Su√®de","Espagne","Italie"],
        "TDAH (%)": [3.7, 4.0, 5.0, 4.5, 3.2, 2.8],
        "Autisme (%)": [1.1, 1.2, 1.3, 1.4, 1.0, 0.9]
    })
    fig_intl = px.scatter(intl, x="TDAH (%)", y="Autisme (%)", size="TDAH (%)",
                          text="Pays", title="TDAH vs Autisme par Pays (taille = TDAH%)",
                          labels={"x":"TDAH (%)","y":"Autisme (%)"})
    fig_intl.update_traces(textposition="top center")
    st.plotly_chart(fig_intl, use_container_width=True)


elif page == "üî¨ NeuroScreen √âvaluations":
    import streamlit as st
    import pandas as pd
    import plotly.express as px
    import numpy as np
    
    st.markdown("## üî¨ NeuroScreen - √âvaluations Neuroscientifiques")
    
    # 1. Pr√©sentation de la batterie de tests
    st.markdown("""
    **NeuroScreen** utilise une batterie de tests cognitifs standardis√©s afin d‚Äô√©valuer diff√©rentes fonctions neuropsychologiques, avec reporting automatis√©.
    """)
    
    tests = [
        {"nom": "Attention Soutenue", "dur√©e": "15 min", 
         "description": "Maintenir l‚Äôattention sur une t√¢che r√©p√©titive."},
        {"nom": "M√©moire de Travail", "dur√©e": "10 min", 
         "description": "Manipulation d‚Äôinformations en m√©moire √† court terme."},
        {"nom": "Flexibilit√© Cognitive", "dur√©e": "12 min", 
         "description": "Passage rapide d‚Äôune r√®gle ou strat√©gie √† une autre."},
        {"nom": "Vitesse de Traitement", "dur√©e": "8 min", 
         "description": "R√©activit√© et rapidit√© de traitement de l‚Äôinformation."},
        {"nom": "Inhibition", "dur√©e": "10 min", 
         "description": "Capacit√© √† supprimer une r√©ponse inappropri√©e."}
    ]
    
    for test in tests:
        with st.expander(f"üß™ {test['nom']} ({test['dur√©e']})"):
            st.markdown(f"**Description**: {test['description']}")
            if st.button(f"Lancer {test['nom']}"):
                st.info(f"Test ¬´ {test['nom']} ¬ª en cours...")  # placeholder
                # Ici, appeler la fonction d‚Äôex√©cution du test
                # puis collecter le score
    
    # 2. Simulation de r√©sultats et profil d√©taill√©
    st.markdown("### üìä R√©sultats et Profil Cognitif")
    
    # Simulation de donn√©es de scores pour l'exemple
    np.random.seed(42)
    scores = {
        "Attention Soutenue": np.random.normal(75, 10),
        "M√©moire de Travail": np.random.normal(70, 12),
        "Flexibilit√© Cognitive": np.random.normal(65, 15),
        "Vitesse de Traitement": np.random.normal(80, 8),
        "Inhibition": np.random.normal(60, 12),
    }
    df_scores = pd.DataFrame.from_dict(scores, orient='index', columns=['Score'])
    df_scores['Score'] = df_scores['Score'].clip(0, 100).round(1)
    
    # Radar chart des fonctions cognitives
    fig_radar = px.line_polar(
        df_scores.reset_index(),
        r='Score', theta='index', line_close=True,
        title="Profil Cognitif - Score par Domaine",
        color_discrete_sequence=["#0066cc"]
    )
    fig_radar.update_traces(fill='toself')
    st.plotly_chart(fig_radar, use_container_width=True)
    
    # 3. Interpr√©tation et recommandations
    st.markdown("#### üîç Interpr√©tation des Scores")
    for domaine, row in df_scores.iterrows():
        score = row['Score']
        if score >= 80:
            niveau = "üîù Excellente performance"
        elif score >= 60:
            niveau = "‚úÖ Comp√©tence satisfaisante"
        else:
            niveau = "‚ö†Ô∏è √Ä renforcer"
        st.markdown(f"- **{domaine}**: {score}/100 ‚Äî {niveau}")
    
    # Recommandations g√©n√©riques
    st.markdown("#### üí° Recommandations Personnalis√©es")
    if df_scores.min().values[0] < 60:
        st.markdown("""
    - Entra√Ænez la fonction cognitive faible via des exercices cibl√©s (apps, jeux c√©r√©braux).
    - Planifiez des pauses r√©guli√®res pendant les t√¢ches exigeantes.
    - Utilisez des supports visuels (mind mapping, checklists).
    - Envisagez un suivi neuropsychologique pour approfondir.
    """)
    else:
        st.markdown("""
    - Continuez √† pratiquer des activit√©s stimulant ces fonctions (lecture rapide, puzzles).
    - Maintenez un environnement de travail adapt√© (calme, organisation).
    - Participez aux modules de formation cognitifs de NeuroScreen.
    """)
    
    # 4. Suivi longitudinal
    st.markdown("### üìà Suivi Longitudinal")
    
    # Exemple de donn√©es historiques
    dates = pd.date_range(end=pd.Timestamp.today(), periods=6, freq='M')
    historic = pd.DataFrame({
        "Date": dates,
        "Attention": np.linspace(65, scores["Attention Soutenue"], 6),
        "M√©moire": np.linspace(60, scores["M√©moire de Travail"], 6),
        "Flexibilit√©": np.linspace(55, scores["Flexibilit√© Cognitive"], 6)
    })
    fig_line = px.line(
        historic.melt(id_vars='Date', var_name='Domaine', value_name='Score'),
        x='Date', y='Score', color='Domaine',
        title="√âvolution des Scores Cognitifs",
        markers=True
    )
    fig_line.update_layout(legend_title=None, font_family="Inter")
    st.plotly_chart(fig_line, use_container_width=True)

# Footer moderne (sans mention Ubisoft inappropri√©e)
st.markdown("---")
st.markdown("""
<div class="footer">
    <p>¬© 2025 NeuroInsight Hub Workspace | Version 2.0</p>
    <p style="font-size: 0.8rem; margin-top: 0.5rem;">
        Hosted with Streamlit ‚Ä¢ Created by remichenouri
    </p>
</div>
""", unsafe_allow_html=True)
